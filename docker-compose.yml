version: "3.8"

services:
  reverse-proxy:
    image: nginx:1.24.0
    ports:
      - "80:80"
    container_name: reverse-proxy
    environment:
      NGINX_CONF: |
        server {
          listen 80 default;

          location / {
            proxy_pass http://frontier:3000;
          }
        }
    depends_on:
      - frontier-web
    command:
      - /bin/bash
      - -c
      - |
        set -e;
        cat > /etc/nginx/conf.d/default.conf <<<$$NGINX_CONF;
        nginx -g "daemon off;";
    networks:
      - backend

  frontier-web:
    build: frontier
    container_name: frontier-web
    depends_on:
      - redis
      - frontier-worker
    networks:
      backend:
        aliases:
          - "frontier"

  frontier-worker:
    build: frontier
    container_name: frontier-worker
    command: ["bundle", "exec", "sidekiq"]
    volumes:
      - git-repositories:/app/git-repositories
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - redis
      - detector
    networks:
      - backend

  redis:
    image: redis:6.2-alpine
    container_name: frontier-redis
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-data:/data
    networks:
      - backend

  detector:
    build: detector
    container_name: clone-detector
    networks:
      - backend

  minio:
    image: minio/minio:RELEASE.2023-04-28T18-11-17Z
    container_name: s3-storage
    ports:
      - "9001:9001"
    volumes:
      - s3-storage:/data
    environment:
      MINIO_ROOT_USER: username
      MINIO_ROOT_PASSWORD: password
    networks:
      - backend
    command: server --console-address ":9001" /data

networks:
  backend:

volumes:
  redis-data:
  git-repositories:
  s3-storage:
